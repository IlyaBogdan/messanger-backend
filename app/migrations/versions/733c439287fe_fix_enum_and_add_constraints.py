"""Fix enum and add constraints

Revision ID: 733c439287fe
Revises: 0455e92324fc
Create Date: 2024-11-03 11:46:00.733952

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '733c439287fe'
down_revision: Union[str, None] = '0455e92324fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('attachments', 'type',
               existing_type=postgresql.ENUM('PHOTO', 'VIDEO', name='attachmentenum'),
               type_=sa.Integer(),
               existing_comment='Type of attachment',
               existing_nullable=False,
               postgresql_using="CASE WHEN type = 'PHOTO' THEN 0 WHEN type = 'VIDEO' THEN 1 END")
    op.alter_column('chat_events', 'type',
               existing_type=postgresql.ENUM('MESSAGE', 'CALL', name='chateventtype'),
               type_=sa.Integer(),
               existing_comment='Type of event',
               existing_nullable=False,
               postgresql_using="CASE WHEN type = 'MESSAGE' THEN 0 WHEN type = 'CALL' THEN 1 END")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('chat_events', 'type',
               existing_type=sa.Integer(),
               type_=postgresql.ENUM('MESSAGE', 'CALL', name='chateventtype'),
               existing_comment='Type of event',
               existing_nullable=False)
    op.alter_column('attachments', 'type',
               existing_type=sa.Integer(),
               type_=postgresql.ENUM('PHOTO', 'VIDEO', name='attachmentenum'),
               existing_comment='Type of attachment',
               existing_nullable=False)
    # ### end Alembic commands ###
